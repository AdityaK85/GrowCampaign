2025-05-31 07:03:14,789 - semgrep.notifications - WARNING - METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

2025-05-31 07:03:14,790 - semgrep.run_scan - DEBUG - semgrep version 1.2.0
2025-05-31 07:03:14,794 - semgrep.git - DEBUG - Failed to get project url from 'git ls-remote': Command failed with exit code: 128
-----
Command failed with output:
fatal: No remote configured to list refs from.


Failed to run 'git ls-remote --get-url'. Possible reasons:

- the git binary is not available
- the current working directory is not a git repository
- the baseline commit is not a parent of the current commit
    (if you are running through semgrep-app, check if you are setting `SEMGREP_BRANCH` or `SEMGREP_BASELINE_COMMIT` properly)
- the current working directory is not marked as safe
    (fix with `git config --global --add safe.directory $(pwd)`)

Try running the command yourself to debug the issue.
2025-05-31 07:03:14,795 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-31 07:03:14,797 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-31 07:03:14,800 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-s2im5o8k.rules
2025-05-31 07:03:14,989 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIXgpdsK/semgrep/bin/semgrep-core-proprietary'.
2025-05-31 07:03:15,434 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-05-31 07:03:15,435 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-05-31 07:03:15,435 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-05-31 07:03:15,435 - semgrep.config_resolver - DEBUG - loaded 1 configs in 0.6400763988494873
2025-05-31 07:03:15,514 - semgrep.run_scan - VERBOSE - running 711 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-05-31 07:03:15,515 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-05-31 07:03:15,517 - semgrep.run_scan - VERBOSE - Rules:
2025-05-31 07:03:15,517 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-05-31 07:03:15,870 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-05-31 07:03:16,022 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-05-31 07:03:16,022 - semgrep.core_runner - DEBUG - /tmp/_MEIXgpdsK/semgrep/bin/opengrep-core -json -rules /tmp/tmphg1eidvh.json -j 8 -targets /tmp/tmpkzgrndsf -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-05-31 07:03:19,626 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.09][[34mINFO[0m]: Executed as: /tmp/_MEIXgpdsK/semgrep/bin/opengrep-core -json -rules /tmp/tmphg1eidvh.json -j 8 -targets /tmp/tmpkzgrndsf -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.09][[34mINFO[0m]: Version: 1.2.0
[00.09][[34mINFO[0m]: Parsing rules in /tmp/tmphg1eidvh.json
[00.57][[34mINFO[0m]: scan: processing 250 files (skipping 0), with 454 rules (skipping 0 )
[03.55][[34mINFO[0m]: Custom ignore pattern: None
[03.55][[34mINFO[0m]: Custom ignore pattern: None
--- end semgrep-core stderr ---
2025-05-31 07:03:19,632 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0ee74fd49637bebe183eca7188dbde26e386314e62cc2e7ba1ee60b377b638243fcd84e6c6fa04886198ccacfa6a711bfbcc61a28f9ddc913d5b3c53083cbc90_0
2025-05-31 07:03:19,632 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-31 07:03:19,633 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-31 07:03:19,633 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-31 07:03:19,634 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 8d554a4a4b58e525ebd15c19f508e5bdb0857c3c1b56af0f13e8ad11729eed94ba7539cdcfaa3c315443e0e29d7edfb453b23307d2a8b5a302156b281fd66eec_0
2025-05-31 07:03:19,635 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) fileName fileName import 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 818acca293a0974b8f640eff1a5ef5a5b5c0a7983159faab7c70c3cb55db7e6424a71f247072be079eff09ac8fe4ed2274e004f5a812cf7ca23ebe9c7efbfbaf_0
2025-05-31 07:03:19,635 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) fileName fileName import 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 818acca293a0974b8f640eff1a5ef5a5b5c0a7983159faab7c70c3cb55db7e6424a71f247072be079eff09ac8fe4ed2274e004f5a812cf7ca23ebe9c7efbfbaf_0
2025-05-31 07:03:19,636 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) fileName fileName import 'path';\n...\n path.join(...,fileName,...) path.resolve(...,fileName,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 818acca293a0974b8f640eff1a5ef5a5b5c0a7983159faab7c70c3cb55db7e6424a71f247072be079eff09ac8fe4ed2274e004f5a812cf7ca23ebe9c7efbfbaf_0
2025-05-31 07:03:19,636 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-05-31 07:03:19,637 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file.path,...) fs. ... .accessSync(req.file.path, ...) fs. ... .appendFile(req.file.path,...) fs. ... .appendFileSync(req.file.path, ...) fs. ... .chmod(req.file.path,...) fs. ... .chmodSync(req.file.path, ...) fs. ... .chown(req.file.path,...) fs. ... .chownSync(req.file.path, ...) fs. ... .close(req.file.path,...) fs. ... .closeSync(req.file.path, ...) fs. ... .copyFile(req.file.path,...) fs. ... .copyFile($SMTH, req.file.path,...) fs. ... .copyFileSync(req.file.path, ...) fs. ... .copyFileSync($SMTH, req.file.path, ...) fs. ... .cp(req.file.path, ...) fs. ... .cp($SMTH, req.file.path, ...) fs. ... .cpSync(req.file.path, ...) fs. ... .cpSync($SMTH, req.file.path, ...) fs. ... .createReadStream(req.file.path,...) fs. ... .createWriteStream(req.file.path,...) fs. ... .exists(req.file.path, ...) fs. ... .existsSync(req.file.path, ...) fs. ... .fchmod(req.file.path, ...) fs. ... .fchmodSync(req.file.path, ...) fs. ... .fchown(req.file.path, ...) fs. ... .fchownSync(req.file.path, ...) fs. ... .fdatasync(req.file.path, ...) fs. ... .fdatasyncSync(req.file.path, ...) fs. ... .fstat(req.file.path, ...) fs. ... .fstatSync(req.file.path, ...) fs. ... .fsync(req.file.path, ...) fs. ... .fsyncSync(req.file.path, ...) fs. ... .ftruncate(req.file.path, ...) fs. ... .ftruncateSync(req.file.path, ...) fs. ... .futimes(req.file.path, ...) fs. ... .futimesSync(req.file.path, ...) fs. ... .lchmod(req.file.path, ...) fs. ... .lchmodSync(req.file.path, ...) fs. ... .lchown(req.file.path, ...) fs. ... .lchownSync(req.file.path, ...) fs. ... .link(req.file.path, ...) fs. ... .link($SMTH, req.file.path, ...) fs. ... .linkSync(req.file.path, ...) fs. ... .linkSync($SMTH, req.file.path, ...) fs. ... .lstat(req.file.path, ...) fs. ... .lstatSync(req.file.path, ...) fs. ... .lutimes(req.file.path, ...) fs. ... .lutimesSync(req.file.path, ...) fs. ... .mkdir(req.file.path, ...) fs. ... .mkdirSync(req.file.path, ...) fs. ... .mkdtemp(req.file.path, ...) fs. ... .mkdtempSync(req.file.path, ...) fs. ... .open(req.file.path, ...) fs. ... .openSync(req.file.path, ...) fs. ... .opendir(req.file.path, ...) fs. ... .opendirSync(req.file.path, ...) fs. ... .read(req.file.path, ...) fs. ... .read(req.file.path, ...) fs. ... .readFile(req.file.path, ...) fs. ... .readFileSync(req.file.path, ...) fs. ... .readSync(req.file.path, ...) fs. ... .readSync(req.file.path, ...) fs. ... .readdir(req.file.path, ...) fs. ... .readdirSync(req.file.path, ...) fs. ... .readlink(req.file.path, ...) fs. ... .readlinkSync(req.file.path, ...) fs. ... .readv(req.file.path, ...) fs. ... .readvSync(req.file.path, ...) fs. ... .realpath(req.file.path, ...) fs. ... .realpath.native(req.file.path, ...) fs. ... .realpathSync.native(req.file.path, ...) fs. ... .realpathync(req.file.path, ...) fs. ... .rename(req.file.path, ...) fs. ... .rename($SMTH, req.file.path, ...) fs. ... .renameSync(req.file.path, ...) fs. ... .renameSync($SMTH, req.file.path, ...) fs. ... .rm(req.file.path, ...) fs. ... .rmSync(req.file.path, ...) fs. ... .rmdir(req.file.path, ...) fs. ... .rmdirSync(req.file.path, ...) fs. ... .stat(req.file.path, ...) fs. ... .statSync(req.file.path, ...) fs. ... .symlink(req.file.path, ...) fs. ... .symlink($SMTH, req.file.path, ...) fs. ... .symlinkSync(req.file.path, ...) fs. ... .symlinkSync($SMTH, req.file.path, ...) fs. ... .truncate(req.file.path, ...) fs. ... .truncateSync(req.file.path, ...) fs. ... .unlink(req.file.path, ...) fs. ... .unlinkSync(req.file.path, ...) fs. ... .unwatchFile(req.file.path, ...) fs. ... .utimes(req.file.path, ...) fs. ... .utimesSync(req.file.path, ...) fs. ... .watch(req.file.path, ...) fs. ... .watchFile(req.file.path, ...) fs. ... .write(req.file.path, ...) fs. ... .writeFile(req.file.path, ...) fs. ... .writeFileSync(req.file.path, ...) fs. ... .writeSync(req.file.path, ...) fs. ... .writev(req.file.path, ...) fs. ... .writevSync(req.file.path, ...) req.file.path $METHOD("...", ...) access(req.file.path,...) accessSync(req.file.path, ...) appendFile(req.file.path,...) appendFileSync(req.file.path, ...) chmod(req.file.path,...) chmodSync(req.file.path, ...) chown(req.file.path,...) chownSync(req.file.path, ...) close(req.file.path,...) closeSync(req.file.path, ...) copyFile(req.file.path,...) copyFile($SMTH, req.file.path,...) copyFileSync(req.file.path, ...) copyFileSync($SMTH, req.file.path, ...) cp(req.file.path, ...) cp($SMTH, req.file.path, ...) cpSync(req.file.path, ...) cpSync($SMTH, req.file.path, ...) createReadStream(req.file.path,...) createWriteStream(req.file.path,...) exists(req.file.path, ...) existsSync(req.file.path, ...) fchmod(req.file.path, ...) fchmodSync(req.file.path, ...) fchown(req.file.path, ...) fchownSync(req.file.path, ...) fdatasync(req.file.path, ...) fdatasyncSync(req.file.path, ...) fstat(req.file.path, ...) fstatSync(req.file.path, ...) fsync(req.file.path, ...) fsyncSync(req.file.path, ...) ftruncate(req.file.path, ...) ftruncateSync(req.file.path, ...) futimes(req.file.path, ...) futimesSync(req.file.path, ...) lchmod(req.file.path, ...) lchmodSync(req.file.path, ...) lchown(req.file.path, ...) lchownSync(req.file.path, ...) link(req.file.path, ...) link($SMTH, req.file.path, ...) linkSync(req.file.path, ...) linkSync($SMTH, req.file.path, ...) lstat(req.file.path, ...) lstatSync(req.file.path, ...) lutimes(req.file.path, ...) lutimesSync(req.file.path, ...) mkdir(req.file.path, ...) mkdirSync(req.file.path, ...) mkdtemp(req.file.path, ...) mkdtempSync(req.file.path, ...) open(req.file.path, ...) openSync(req.file.path, ...) opendir(req.file.path, ...) opendirSync(req.file.path, ...) read(req.file.path, ...) read(req.file.path, ...) readFile(req.file.path, ...) readFileSync(req.file.path, ...) readSync(req.file.path, ...) readSync(req.file.path, ...) readdir(req.file.path, ...) readdirSync(req.file.path, ...) readlink(req.file.path, ...) readlinkSync(req.file.path, ...) readv(req.file.path, ...) readvSync(req.file.path, ...) realpath(req.file.path, ...) realpath.native(req.file.path, ...) realpathSync.native(req.file.path, ...) realpathync(req.file.path, ...) rename(req.file.path, ...) rename($SMTH, req.file.path, ...) renameSync(req.file.path, ...) renameSync($SMTH, req.file.path, ...) rm(req.file.path, ...) rmSync(req.file.path, ...) rmdir(req.file.path, ...) rmdirSync(req.file.path, ...) stat(req.file.path, ...) statSync(req.file.path, ...) symlink(req.file.path, ...) symlink($SMTH, req.file.path, ...) symlinkSync(req.file.path, ...) symlinkSync($SMTH, req.file.path, ...) truncate(req.file.path, ...) truncateSync(req.file.path, ...) unlink(req.file.path, ...) unlinkSync(req.file.path, ...) unwatchFile(req.file.path, ...) utimes(req.file.path, ...) utimesSync(req.file.path, ...) watch(req.file.path, ...) watchFile(req.file.path, ...) write(req.file.path, ...) writeFile(req.file.path, ...) writeFileSync(req.file.path, ...) writeSync(req.file.path, ...) writev(req.file.path, ...) writevSync(req.file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 28e663fcb0fa8bb7eb185c6b2660823a610e2905692cd9138c98a93821419825834b56b0b8197d228c0a51afaa6a2299de128267e2a7e83a554140f6a9567a1f_0
2025-05-31 07:03:19,638 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file.path,...) fs. ... .accessSync(req.file.path, ...) fs. ... .appendFile(req.file.path,...) fs. ... .appendFileSync(req.file.path, ...) fs. ... .chmod(req.file.path,...) fs. ... .chmodSync(req.file.path, ...) fs. ... .chown(req.file.path,...) fs. ... .chownSync(req.file.path, ...) fs. ... .close(req.file.path,...) fs. ... .closeSync(req.file.path, ...) fs. ... .copyFile(req.file.path,...) fs. ... .copyFile($SMTH, req.file.path,...) fs. ... .copyFileSync(req.file.path, ...) fs. ... .copyFileSync($SMTH, req.file.path, ...) fs. ... .cp(req.file.path, ...) fs. ... .cp($SMTH, req.file.path, ...) fs. ... .cpSync(req.file.path, ...) fs. ... .cpSync($SMTH, req.file.path, ...) fs. ... .createReadStream(req.file.path,...) fs. ... .createWriteStream(req.file.path,...) fs. ... .exists(req.file.path, ...) fs. ... .existsSync(req.file.path, ...) fs. ... .fchmod(req.file.path, ...) fs. ... .fchmodSync(req.file.path, ...) fs. ... .fchown(req.file.path, ...) fs. ... .fchownSync(req.file.path, ...) fs. ... .fdatasync(req.file.path, ...) fs. ... .fdatasyncSync(req.file.path, ...) fs. ... .fstat(req.file.path, ...) fs. ... .fstatSync(req.file.path, ...) fs. ... .fsync(req.file.path, ...) fs. ... .fsyncSync(req.file.path, ...) fs. ... .ftruncate(req.file.path, ...) fs. ... .ftruncateSync(req.file.path, ...) fs. ... .futimes(req.file.path, ...) fs. ... .futimesSync(req.file.path, ...) fs. ... .lchmod(req.file.path, ...) fs. ... .lchmodSync(req.file.path, ...) fs. ... .lchown(req.file.path, ...) fs. ... .lchownSync(req.file.path, ...) fs. ... .link(req.file.path, ...) fs. ... .link($SMTH, req.file.path, ...) fs. ... .linkSync(req.file.path, ...) fs. ... .linkSync($SMTH, req.file.path, ...) fs. ... .lstat(req.file.path, ...) fs. ... .lstatSync(req.file.path, ...) fs. ... .lutimes(req.file.path, ...) fs. ... .lutimesSync(req.file.path, ...) fs. ... .mkdir(req.file.path, ...) fs. ... .mkdirSync(req.file.path, ...) fs. ... .mkdtemp(req.file.path, ...) fs. ... .mkdtempSync(req.file.path, ...) fs. ... .open(req.file.path, ...) fs. ... .openSync(req.file.path, ...) fs. ... .opendir(req.file.path, ...) fs. ... .opendirSync(req.file.path, ...) fs. ... .read(req.file.path, ...) fs. ... .read(req.file.path, ...) fs. ... .readFile(req.file.path, ...) fs. ... .readFileSync(req.file.path, ...) fs. ... .readSync(req.file.path, ...) fs. ... .readSync(req.file.path, ...) fs. ... .readdir(req.file.path, ...) fs. ... .readdirSync(req.file.path, ...) fs. ... .readlink(req.file.path, ...) fs. ... .readlinkSync(req.file.path, ...) fs. ... .readv(req.file.path, ...) fs. ... .readvSync(req.file.path, ...) fs. ... .realpath(req.file.path, ...) fs. ... .realpath.native(req.file.path, ...) fs. ... .realpathSync.native(req.file.path, ...) fs. ... .realpathync(req.file.path, ...) fs. ... .rename(req.file.path, ...) fs. ... .rename($SMTH, req.file.path, ...) fs. ... .renameSync(req.file.path, ...) fs. ... .renameSync($SMTH, req.file.path, ...) fs. ... .rm(req.file.path, ...) fs. ... .rmSync(req.file.path, ...) fs. ... .rmdir(req.file.path, ...) fs. ... .rmdirSync(req.file.path, ...) fs. ... .stat(req.file.path, ...) fs. ... .statSync(req.file.path, ...) fs. ... .symlink(req.file.path, ...) fs. ... .symlink($SMTH, req.file.path, ...) fs. ... .symlinkSync(req.file.path, ...) fs. ... .symlinkSync($SMTH, req.file.path, ...) fs. ... .truncate(req.file.path, ...) fs. ... .truncateSync(req.file.path, ...) fs. ... .unlink(req.file.path, ...) fs. ... .unlinkSync(req.file.path, ...) fs. ... .unwatchFile(req.file.path, ...) fs. ... .utimes(req.file.path, ...) fs. ... .utimesSync(req.file.path, ...) fs. ... .watch(req.file.path, ...) fs. ... .watchFile(req.file.path, ...) fs. ... .write(req.file.path, ...) fs. ... .writeFile(req.file.path, ...) fs. ... .writeFileSync(req.file.path, ...) fs. ... .writeSync(req.file.path, ...) fs. ... .writev(req.file.path, ...) fs. ... .writevSync(req.file.path, ...) req.file.path $METHOD("...", ...) access(req.file.path,...) accessSync(req.file.path, ...) appendFile(req.file.path,...) appendFileSync(req.file.path, ...) chmod(req.file.path,...) chmodSync(req.file.path, ...) chown(req.file.path,...) chownSync(req.file.path, ...) close(req.file.path,...) closeSync(req.file.path, ...) copyFile(req.file.path,...) copyFile($SMTH, req.file.path,...) copyFileSync(req.file.path, ...) copyFileSync($SMTH, req.file.path, ...) cp(req.file.path, ...) cp($SMTH, req.file.path, ...) cpSync(req.file.path, ...) cpSync($SMTH, req.file.path, ...) createReadStream(req.file.path,...) createWriteStream(req.file.path,...) exists(req.file.path, ...) existsSync(req.file.path, ...) fchmod(req.file.path, ...) fchmodSync(req.file.path, ...) fchown(req.file.path, ...) fchownSync(req.file.path, ...) fdatasync(req.file.path, ...) fdatasyncSync(req.file.path, ...) fstat(req.file.path, ...) fstatSync(req.file.path, ...) fsync(req.file.path, ...) fsyncSync(req.file.path, ...) ftruncate(req.file.path, ...) ftruncateSync(req.file.path, ...) futimes(req.file.path, ...) futimesSync(req.file.path, ...) lchmod(req.file.path, ...) lchmodSync(req.file.path, ...) lchown(req.file.path, ...) lchownSync(req.file.path, ...) link(req.file.path, ...) link($SMTH, req.file.path, ...) linkSync(req.file.path, ...) linkSync($SMTH, req.file.path, ...) lstat(req.file.path, ...) lstatSync(req.file.path, ...) lutimes(req.file.path, ...) lutimesSync(req.file.path, ...) mkdir(req.file.path, ...) mkdirSync(req.file.path, ...) mkdtemp(req.file.path, ...) mkdtempSync(req.file.path, ...) open(req.file.path, ...) openSync(req.file.path, ...) opendir(req.file.path, ...) opendirSync(req.file.path, ...) read(req.file.path, ...) read(req.file.path, ...) readFile(req.file.path, ...) readFileSync(req.file.path, ...) readSync(req.file.path, ...) readSync(req.file.path, ...) readdir(req.file.path, ...) readdirSync(req.file.path, ...) readlink(req.file.path, ...) readlinkSync(req.file.path, ...) readv(req.file.path, ...) readvSync(req.file.path, ...) realpath(req.file.path, ...) realpath.native(req.file.path, ...) realpathSync.native(req.file.path, ...) realpathync(req.file.path, ...) rename(req.file.path, ...) rename($SMTH, req.file.path, ...) renameSync(req.file.path, ...) renameSync($SMTH, req.file.path, ...) rm(req.file.path, ...) rmSync(req.file.path, ...) rmdir(req.file.path, ...) rmdirSync(req.file.path, ...) stat(req.file.path, ...) statSync(req.file.path, ...) symlink(req.file.path, ...) symlink($SMTH, req.file.path, ...) symlinkSync(req.file.path, ...) symlinkSync($SMTH, req.file.path, ...) truncate(req.file.path, ...) truncateSync(req.file.path, ...) unlink(req.file.path, ...) unlinkSync(req.file.path, ...) unwatchFile(req.file.path, ...) utimes(req.file.path, ...) utimesSync(req.file.path, ...) watch(req.file.path, ...) watchFile(req.file.path, ...) write(req.file.path, ...) writeFile(req.file.path, ...) writeFileSync(req.file.path, ...) writeSync(req.file.path, ...) writev(req.file.path, ...) writevSync(req.file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 28e663fcb0fa8bb7eb185c6b2660823a610e2905692cd9138c98a93821419825834b56b0b8197d228c0a51afaa6a2299de128267e2a7e83a554140f6a9567a1f_0
2025-05-31 07:03:19,638 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} req.file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(req.file.path,...) fs. ... .accessSync(req.file.path, ...) fs. ... .appendFile(req.file.path,...) fs. ... .appendFileSync(req.file.path, ...) fs. ... .chmod(req.file.path,...) fs. ... .chmodSync(req.file.path, ...) fs. ... .chown(req.file.path,...) fs. ... .chownSync(req.file.path, ...) fs. ... .close(req.file.path,...) fs. ... .closeSync(req.file.path, ...) fs. ... .copyFile(req.file.path,...) fs. ... .copyFile($SMTH, req.file.path,...) fs. ... .copyFileSync(req.file.path, ...) fs. ... .copyFileSync($SMTH, req.file.path, ...) fs. ... .cp(req.file.path, ...) fs. ... .cp($SMTH, req.file.path, ...) fs. ... .cpSync(req.file.path, ...) fs. ... .cpSync($SMTH, req.file.path, ...) fs. ... .createReadStream(req.file.path,...) fs. ... .createWriteStream(req.file.path,...) fs. ... .exists(req.file.path, ...) fs. ... .existsSync(req.file.path, ...) fs. ... .fchmod(req.file.path, ...) fs. ... .fchmodSync(req.file.path, ...) fs. ... .fchown(req.file.path, ...) fs. ... .fchownSync(req.file.path, ...) fs. ... .fdatasync(req.file.path, ...) fs. ... .fdatasyncSync(req.file.path, ...) fs. ... .fstat(req.file.path, ...) fs. ... .fstatSync(req.file.path, ...) fs. ... .fsync(req.file.path, ...) fs. ... .fsyncSync(req.file.path, ...) fs. ... .ftruncate(req.file.path, ...) fs. ... .ftruncateSync(req.file.path, ...) fs. ... .futimes(req.file.path, ...) fs. ... .futimesSync(req.file.path, ...) fs. ... .lchmod(req.file.path, ...) fs. ... .lchmodSync(req.file.path, ...) fs. ... .lchown(req.file.path, ...) fs. ... .lchownSync(req.file.path, ...) fs. ... .link(req.file.path, ...) fs. ... .link($SMTH, req.file.path, ...) fs. ... .linkSync(req.file.path, ...) fs. ... .linkSync($SMTH, req.file.path, ...) fs. ... .lstat(req.file.path, ...) fs. ... .lstatSync(req.file.path, ...) fs. ... .lutimes(req.file.path, ...) fs. ... .lutimesSync(req.file.path, ...) fs. ... .mkdir(req.file.path, ...) fs. ... .mkdirSync(req.file.path, ...) fs. ... .mkdtemp(req.file.path, ...) fs. ... .mkdtempSync(req.file.path, ...) fs. ... .open(req.file.path, ...) fs. ... .openSync(req.file.path, ...) fs. ... .opendir(req.file.path, ...) fs. ... .opendirSync(req.file.path, ...) fs. ... .read(req.file.path, ...) fs. ... .read(req.file.path, ...) fs. ... .readFile(req.file.path, ...) fs. ... .readFileSync(req.file.path, ...) fs. ... .readSync(req.file.path, ...) fs. ... .readSync(req.file.path, ...) fs. ... .readdir(req.file.path, ...) fs. ... .readdirSync(req.file.path, ...) fs. ... .readlink(req.file.path, ...) fs. ... .readlinkSync(req.file.path, ...) fs. ... .readv(req.file.path, ...) fs. ... .readvSync(req.file.path, ...) fs. ... .realpath(req.file.path, ...) fs. ... .realpath.native(req.file.path, ...) fs. ... .realpathSync.native(req.file.path, ...) fs. ... .realpathync(req.file.path, ...) fs. ... .rename(req.file.path, ...) fs. ... .rename($SMTH, req.file.path, ...) fs. ... .renameSync(req.file.path, ...) fs. ... .renameSync($SMTH, req.file.path, ...) fs. ... .rm(req.file.path, ...) fs. ... .rmSync(req.file.path, ...) fs. ... .rmdir(req.file.path, ...) fs. ... .rmdirSync(req.file.path, ...) fs. ... .stat(req.file.path, ...) fs. ... .statSync(req.file.path, ...) fs. ... .symlink(req.file.path, ...) fs. ... .symlink($SMTH, req.file.path, ...) fs. ... .symlinkSync(req.file.path, ...) fs. ... .symlinkSync($SMTH, req.file.path, ...) fs. ... .truncate(req.file.path, ...) fs. ... .truncateSync(req.file.path, ...) fs. ... .unlink(req.file.path, ...) fs. ... .unlinkSync(req.file.path, ...) fs. ... .unwatchFile(req.file.path, ...) fs. ... .utimes(req.file.path, ...) fs. ... .utimesSync(req.file.path, ...) fs. ... .watch(req.file.path, ...) fs. ... .watchFile(req.file.path, ...) fs. ... .write(req.file.path, ...) fs. ... .writeFile(req.file.path, ...) fs. ... .writeFileSync(req.file.path, ...) fs. ... .writeSync(req.file.path, ...) fs. ... .writev(req.file.path, ...) fs. ... .writevSync(req.file.path, ...) req.file.path $METHOD("...", ...) access(req.file.path,...) accessSync(req.file.path, ...) appendFile(req.file.path,...) appendFileSync(req.file.path, ...) chmod(req.file.path,...) chmodSync(req.file.path, ...) chown(req.file.path,...) chownSync(req.file.path, ...) close(req.file.path,...) closeSync(req.file.path, ...) copyFile(req.file.path,...) copyFile($SMTH, req.file.path,...) copyFileSync(req.file.path, ...) copyFileSync($SMTH, req.file.path, ...) cp(req.file.path, ...) cp($SMTH, req.file.path, ...) cpSync(req.file.path, ...) cpSync($SMTH, req.file.path, ...) createReadStream(req.file.path,...) createWriteStream(req.file.path,...) exists(req.file.path, ...) existsSync(req.file.path, ...) fchmod(req.file.path, ...) fchmodSync(req.file.path, ...) fchown(req.file.path, ...) fchownSync(req.file.path, ...) fdatasync(req.file.path, ...) fdatasyncSync(req.file.path, ...) fstat(req.file.path, ...) fstatSync(req.file.path, ...) fsync(req.file.path, ...) fsyncSync(req.file.path, ...) ftruncate(req.file.path, ...) ftruncateSync(req.file.path, ...) futimes(req.file.path, ...) futimesSync(req.file.path, ...) lchmod(req.file.path, ...) lchmodSync(req.file.path, ...) lchown(req.file.path, ...) lchownSync(req.file.path, ...) link(req.file.path, ...) link($SMTH, req.file.path, ...) linkSync(req.file.path, ...) linkSync($SMTH, req.file.path, ...) lstat(req.file.path, ...) lstatSync(req.file.path, ...) lutimes(req.file.path, ...) lutimesSync(req.file.path, ...) mkdir(req.file.path, ...) mkdirSync(req.file.path, ...) mkdtemp(req.file.path, ...) mkdtempSync(req.file.path, ...) open(req.file.path, ...) openSync(req.file.path, ...) opendir(req.file.path, ...) opendirSync(req.file.path, ...) read(req.file.path, ...) read(req.file.path, ...) readFile(req.file.path, ...) readFileSync(req.file.path, ...) readSync(req.file.path, ...) readSync(req.file.path, ...) readdir(req.file.path, ...) readdirSync(req.file.path, ...) readlink(req.file.path, ...) readlinkSync(req.file.path, ...) readv(req.file.path, ...) readvSync(req.file.path, ...) realpath(req.file.path, ...) realpath.native(req.file.path, ...) realpathSync.native(req.file.path, ...) realpathync(req.file.path, ...) rename(req.file.path, ...) rename($SMTH, req.file.path, ...) renameSync(req.file.path, ...) renameSync($SMTH, req.file.path, ...) rm(req.file.path, ...) rmSync(req.file.path, ...) rmdir(req.file.path, ...) rmdirSync(req.file.path, ...) stat(req.file.path, ...) statSync(req.file.path, ...) symlink(req.file.path, ...) symlink($SMTH, req.file.path, ...) symlinkSync(req.file.path, ...) symlinkSync($SMTH, req.file.path, ...) truncate(req.file.path, ...) truncateSync(req.file.path, ...) unlink(req.file.path, ...) unlinkSync(req.file.path, ...) unwatchFile(req.file.path, ...) utimes(req.file.path, ...) utimesSync(req.file.path, ...) watch(req.file.path, ...) watchFile(req.file.path, ...) write(req.file.path, ...) writeFile(req.file.path, ...) writeFileSync(req.file.path, ...) writeSync(req.file.path, ...) writev(req.file.path, ...) writevSync(req.file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 28e663fcb0fa8bb7eb185c6b2660823a610e2905692cd9138c98a93821419825834b56b0b8197d228c0a51afaa6a2299de128267e2a7e83a554140f6a9567a1f_0
2025-05-31 07:03:19,639 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-05-31 07:03:19,639 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} newPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(newPath,...) fs. ... .accessSync(newPath, ...) fs. ... .appendFile(newPath,...) fs. ... .appendFileSync(newPath, ...) fs. ... .chmod(newPath,...) fs. ... .chmodSync(newPath, ...) fs. ... .chown(newPath,...) fs. ... .chownSync(newPath, ...) fs. ... .close(newPath,...) fs. ... .closeSync(newPath, ...) fs. ... .copyFile(newPath,...) fs. ... .copyFile(req.file.path, newPath,...) fs. ... .copyFileSync(newPath, ...) fs. ... .copyFileSync(req.file.path, newPath, ...) fs. ... .cp(newPath, ...) fs. ... .cp(req.file.path, newPath, ...) fs. ... .cpSync(newPath, ...) fs. ... .cpSync(req.file.path, newPath, ...) fs. ... .createReadStream(newPath,...) fs. ... .createWriteStream(newPath,...) fs. ... .exists(newPath, ...) fs. ... .existsSync(newPath, ...) fs. ... .fchmod(newPath, ...) fs. ... .fchmodSync(newPath, ...) fs. ... .fchown(newPath, ...) fs. ... .fchownSync(newPath, ...) fs. ... .fdatasync(newPath, ...) fs. ... .fdatasyncSync(newPath, ...) fs. ... .fstat(newPath, ...) fs. ... .fstatSync(newPath, ...) fs. ... .fsync(newPath, ...) fs. ... .fsyncSync(newPath, ...) fs. ... .ftruncate(newPath, ...) fs. ... .ftruncateSync(newPath, ...) fs. ... .futimes(newPath, ...) fs. ... .futimesSync(newPath, ...) fs. ... .lchmod(newPath, ...) fs. ... .lchmodSync(newPath, ...) fs. ... .lchown(newPath, ...) fs. ... .lchownSync(newPath, ...) fs. ... .link(newPath, ...) fs. ... .link(req.file.path, newPath, ...) fs. ... .linkSync(newPath, ...) fs. ... .linkSync(req.file.path, newPath, ...) fs. ... .lstat(newPath, ...) fs. ... .lstatSync(newPath, ...) fs. ... .lutimes(newPath, ...) fs. ... .lutimesSync(newPath, ...) fs. ... .mkdir(newPath, ...) fs. ... .mkdirSync(newPath, ...) fs. ... .mkdtemp(newPath, ...) fs. ... .mkdtempSync(newPath, ...) fs. ... .open(newPath, ...) fs. ... .openSync(newPath, ...) fs. ... .opendir(newPath, ...) fs. ... .opendirSync(newPath, ...) fs. ... .read(newPath, ...) fs. ... .read(newPath, ...) fs. ... .readFile(newPath, ...) fs. ... .readFileSync(newPath, ...) fs. ... .readSync(newPath, ...) fs. ... .readSync(newPath, ...) fs. ... .readdir(newPath, ...) fs. ... .readdirSync(newPath, ...) fs. ... .readlink(newPath, ...) fs. ... .readlinkSync(newPath, ...) fs. ... .readv(newPath, ...) fs. ... .readvSync(newPath, ...) fs. ... .realpath(newPath, ...) fs. ... .realpath.native(newPath, ...) fs. ... .realpathSync.native(newPath, ...) fs. ... .realpathync(newPath, ...) fs. ... .rename(newPath, ...) fs. ... .rename(req.file.path, newPath, ...) fs. ... .renameSync(newPath, ...) fs. ... .renameSync(req.file.path, newPath, ...) fs. ... .rm(newPath, ...) fs. ... .rmSync(newPath, ...) fs. ... .rmdir(newPath, ...) fs. ... .rmdirSync(newPath, ...) fs. ... .stat(newPath, ...) fs. ... .statSync(newPath, ...) fs. ... .symlink(newPath, ...) fs. ... .symlink(req.file.path, newPath, ...) fs. ... .symlinkSync(newPath, ...) fs. ... .symlinkSync(req.file.path, newPath, ...) fs. ... .truncate(newPath, ...) fs. ... .truncateSync(newPath, ...) fs. ... .unlink(newPath, ...) fs. ... .unlinkSync(newPath, ...) fs. ... .unwatchFile(newPath, ...) fs. ... .utimes(newPath, ...) fs. ... .utimesSync(newPath, ...) fs. ... .watch(newPath, ...) fs. ... .watchFile(newPath, ...) fs. ... .write(newPath, ...) fs. ... .writeFile(newPath, ...) fs. ... .writeFileSync(newPath, ...) fs. ... .writeSync(newPath, ...) fs. ... .writev(newPath, ...) fs. ... .writevSync(newPath, ...) newPath $METHOD("...", ...) access(newPath,...) accessSync(newPath, ...) appendFile(newPath,...) appendFileSync(newPath, ...) chmod(newPath,...) chmodSync(newPath, ...) chown(newPath,...) chownSync(newPath, ...) close(newPath,...) closeSync(newPath, ...) copyFile(newPath,...) copyFile(req.file.path, newPath,...) copyFileSync(newPath, ...) copyFileSync(req.file.path, newPath, ...) cp(newPath, ...) cp(req.file.path, newPath, ...) cpSync(newPath, ...) cpSync(req.file.path, newPath, ...) createReadStream(newPath,...) createWriteStream(newPath,...) exists(newPath, ...) existsSync(newPath, ...) fchmod(newPath, ...) fchmodSync(newPath, ...) fchown(newPath, ...) fchownSync(newPath, ...) fdatasync(newPath, ...) fdatasyncSync(newPath, ...) fstat(newPath, ...) fstatSync(newPath, ...) fsync(newPath, ...) fsyncSync(newPath, ...) ftruncate(newPath, ...) ftruncateSync(newPath, ...) futimes(newPath, ...) futimesSync(newPath, ...) lchmod(newPath, ...) lchmodSync(newPath, ...) lchown(newPath, ...) lchownSync(newPath, ...) link(newPath, ...) link(req.file.path, newPath, ...) linkSync(newPath, ...) linkSync(req.file.path, newPath, ...) lstat(newPath, ...) lstatSync(newPath, ...) lutimes(newPath, ...) lutimesSync(newPath, ...) mkdir(newPath, ...) mkdirSync(newPath, ...) mkdtemp(newPath, ...) mkdtempSync(newPath, ...) open(newPath, ...) openSync(newPath, ...) opendir(newPath, ...) opendirSync(newPath, ...) read(newPath, ...) read(newPath, ...) readFile(newPath, ...) readFileSync(newPath, ...) readSync(newPath, ...) readSync(newPath, ...) readdir(newPath, ...) readdirSync(newPath, ...) readlink(newPath, ...) readlinkSync(newPath, ...) readv(newPath, ...) readvSync(newPath, ...) realpath(newPath, ...) realpath.native(newPath, ...) realpathSync.native(newPath, ...) realpathync(newPath, ...) rename(newPath, ...) rename(req.file.path, newPath, ...) renameSync(newPath, ...) renameSync(req.file.path, newPath, ...) rm(newPath, ...) rmSync(newPath, ...) rmdir(newPath, ...) rmdirSync(newPath, ...) stat(newPath, ...) statSync(newPath, ...) symlink(newPath, ...) symlink(req.file.path, newPath, ...) symlinkSync(newPath, ...) symlinkSync(req.file.path, newPath, ...) truncate(newPath, ...) truncateSync(newPath, ...) unlink(newPath, ...) unlinkSync(newPath, ...) unwatchFile(newPath, ...) utimes(newPath, ...) utimesSync(newPath, ...) watch(newPath, ...) watchFile(newPath, ...) write(newPath, ...) writeFile(newPath, ...) writeFileSync(newPath, ...) writeSync(newPath, ...) writev(newPath, ...) writevSync(newPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 47544dea662a3fffd3a86aa3ab44fbb92fa65a4fae39c436d68087c004ecbac28047cb2c891791e6d82803ba59abb6132fd2218243ce81ff835f43f7d547c8ca_0
2025-05-31 07:03:19,640 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} newPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(newPath,...) fs. ... .accessSync(newPath, ...) fs. ... .appendFile(newPath,...) fs. ... .appendFileSync(newPath, ...) fs. ... .chmod(newPath,...) fs. ... .chmodSync(newPath, ...) fs. ... .chown(newPath,...) fs. ... .chownSync(newPath, ...) fs. ... .close(newPath,...) fs. ... .closeSync(newPath, ...) fs. ... .copyFile(newPath,...) fs. ... .copyFile(req.file.path, newPath,...) fs. ... .copyFileSync(newPath, ...) fs. ... .copyFileSync(req.file.path, newPath, ...) fs. ... .cp(newPath, ...) fs. ... .cp(req.file.path, newPath, ...) fs. ... .cpSync(newPath, ...) fs. ... .cpSync(req.file.path, newPath, ...) fs. ... .createReadStream(newPath,...) fs. ... .createWriteStream(newPath,...) fs. ... .exists(newPath, ...) fs. ... .existsSync(newPath, ...) fs. ... .fchmod(newPath, ...) fs. ... .fchmodSync(newPath, ...) fs. ... .fchown(newPath, ...) fs. ... .fchownSync(newPath, ...) fs. ... .fdatasync(newPath, ...) fs. ... .fdatasyncSync(newPath, ...) fs. ... .fstat(newPath, ...) fs. ... .fstatSync(newPath, ...) fs. ... .fsync(newPath, ...) fs. ... .fsyncSync(newPath, ...) fs. ... .ftruncate(newPath, ...) fs. ... .ftruncateSync(newPath, ...) fs. ... .futimes(newPath, ...) fs. ... .futimesSync(newPath, ...) fs. ... .lchmod(newPath, ...) fs. ... .lchmodSync(newPath, ...) fs. ... .lchown(newPath, ...) fs. ... .lchownSync(newPath, ...) fs. ... .link(newPath, ...) fs. ... .link(req.file.path, newPath, ...) fs. ... .linkSync(newPath, ...) fs. ... .linkSync(req.file.path, newPath, ...) fs. ... .lstat(newPath, ...) fs. ... .lstatSync(newPath, ...) fs. ... .lutimes(newPath, ...) fs. ... .lutimesSync(newPath, ...) fs. ... .mkdir(newPath, ...) fs. ... .mkdirSync(newPath, ...) fs. ... .mkdtemp(newPath, ...) fs. ... .mkdtempSync(newPath, ...) fs. ... .open(newPath, ...) fs. ... .openSync(newPath, ...) fs. ... .opendir(newPath, ...) fs. ... .opendirSync(newPath, ...) fs. ... .read(newPath, ...) fs. ... .read(newPath, ...) fs. ... .readFile(newPath, ...) fs. ... .readFileSync(newPath, ...) fs. ... .readSync(newPath, ...) fs. ... .readSync(newPath, ...) fs. ... .readdir(newPath, ...) fs. ... .readdirSync(newPath, ...) fs. ... .readlink(newPath, ...) fs. ... .readlinkSync(newPath, ...) fs. ... .readv(newPath, ...) fs. ... .readvSync(newPath, ...) fs. ... .realpath(newPath, ...) fs. ... .realpath.native(newPath, ...) fs. ... .realpathSync.native(newPath, ...) fs. ... .realpathync(newPath, ...) fs. ... .rename(newPath, ...) fs. ... .rename(req.file.path, newPath, ...) fs. ... .renameSync(newPath, ...) fs. ... .renameSync(req.file.path, newPath, ...) fs. ... .rm(newPath, ...) fs. ... .rmSync(newPath, ...) fs. ... .rmdir(newPath, ...) fs. ... .rmdirSync(newPath, ...) fs. ... .stat(newPath, ...) fs. ... .statSync(newPath, ...) fs. ... .symlink(newPath, ...) fs. ... .symlink(req.file.path, newPath, ...) fs. ... .symlinkSync(newPath, ...) fs. ... .symlinkSync(req.file.path, newPath, ...) fs. ... .truncate(newPath, ...) fs. ... .truncateSync(newPath, ...) fs. ... .unlink(newPath, ...) fs. ... .unlinkSync(newPath, ...) fs. ... .unwatchFile(newPath, ...) fs. ... .utimes(newPath, ...) fs. ... .utimesSync(newPath, ...) fs. ... .watch(newPath, ...) fs. ... .watchFile(newPath, ...) fs. ... .write(newPath, ...) fs. ... .writeFile(newPath, ...) fs. ... .writeFileSync(newPath, ...) fs. ... .writeSync(newPath, ...) fs. ... .writev(newPath, ...) fs. ... .writevSync(newPath, ...) newPath $METHOD("...", ...) access(newPath,...) accessSync(newPath, ...) appendFile(newPath,...) appendFileSync(newPath, ...) chmod(newPath,...) chmodSync(newPath, ...) chown(newPath,...) chownSync(newPath, ...) close(newPath,...) closeSync(newPath, ...) copyFile(newPath,...) copyFile(req.file.path, newPath,...) copyFileSync(newPath, ...) copyFileSync(req.file.path, newPath, ...) cp(newPath, ...) cp(req.file.path, newPath, ...) cpSync(newPath, ...) cpSync(req.file.path, newPath, ...) createReadStream(newPath,...) createWriteStream(newPath,...) exists(newPath, ...) existsSync(newPath, ...) fchmod(newPath, ...) fchmodSync(newPath, ...) fchown(newPath, ...) fchownSync(newPath, ...) fdatasync(newPath, ...) fdatasyncSync(newPath, ...) fstat(newPath, ...) fstatSync(newPath, ...) fsync(newPath, ...) fsyncSync(newPath, ...) ftruncate(newPath, ...) ftruncateSync(newPath, ...) futimes(newPath, ...) futimesSync(newPath, ...) lchmod(newPath, ...) lchmodSync(newPath, ...) lchown(newPath, ...) lchownSync(newPath, ...) link(newPath, ...) link(req.file.path, newPath, ...) linkSync(newPath, ...) linkSync(req.file.path, newPath, ...) lstat(newPath, ...) lstatSync(newPath, ...) lutimes(newPath, ...) lutimesSync(newPath, ...) mkdir(newPath, ...) mkdirSync(newPath, ...) mkdtemp(newPath, ...) mkdtempSync(newPath, ...) open(newPath, ...) openSync(newPath, ...) opendir(newPath, ...) opendirSync(newPath, ...) read(newPath, ...) read(newPath, ...) readFile(newPath, ...) readFileSync(newPath, ...) readSync(newPath, ...) readSync(newPath, ...) readdir(newPath, ...) readdirSync(newPath, ...) readlink(newPath, ...) readlinkSync(newPath, ...) readv(newPath, ...) readvSync(newPath, ...) realpath(newPath, ...) realpath.native(newPath, ...) realpathSync.native(newPath, ...) realpathync(newPath, ...) rename(newPath, ...) rename(req.file.path, newPath, ...) renameSync(newPath, ...) renameSync(req.file.path, newPath, ...) rm(newPath, ...) rmSync(newPath, ...) rmdir(newPath, ...) rmdirSync(newPath, ...) stat(newPath, ...) statSync(newPath, ...) symlink(newPath, ...) symlink(req.file.path, newPath, ...) symlinkSync(newPath, ...) symlinkSync(req.file.path, newPath, ...) truncate(newPath, ...) truncateSync(newPath, ...) unlink(newPath, ...) unlinkSync(newPath, ...) unwatchFile(newPath, ...) utimes(newPath, ...) utimesSync(newPath, ...) watch(newPath, ...) watchFile(newPath, ...) write(newPath, ...) writeFile(newPath, ...) writeFileSync(newPath, ...) writeSync(newPath, ...) writev(newPath, ...) writevSync(newPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 47544dea662a3fffd3a86aa3ab44fbb92fa65a4fae39c436d68087c004ecbac28047cb2c891791e6d82803ba59abb6132fd2218243ce81ff835f43f7d547c8ca_0
2025-05-31 07:03:19,640 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} newPath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(newPath,...) fs. ... .accessSync(newPath, ...) fs. ... .appendFile(newPath,...) fs. ... .appendFileSync(newPath, ...) fs. ... .chmod(newPath,...) fs. ... .chmodSync(newPath, ...) fs. ... .chown(newPath,...) fs. ... .chownSync(newPath, ...) fs. ... .close(newPath,...) fs. ... .closeSync(newPath, ...) fs. ... .copyFile(newPath,...) fs. ... .copyFile(req.file.path, newPath,...) fs. ... .copyFileSync(newPath, ...) fs. ... .copyFileSync(req.file.path, newPath, ...) fs. ... .cp(newPath, ...) fs. ... .cp(req.file.path, newPath, ...) fs. ... .cpSync(newPath, ...) fs. ... .cpSync(req.file.path, newPath, ...) fs. ... .createReadStream(newPath,...) fs. ... .createWriteStream(newPath,...) fs. ... .exists(newPath, ...) fs. ... .existsSync(newPath, ...) fs. ... .fchmod(newPath, ...) fs. ... .fchmodSync(newPath, ...) fs. ... .fchown(newPath, ...) fs. ... .fchownSync(newPath, ...) fs. ... .fdatasync(newPath, ...) fs. ... .fdatasyncSync(newPath, ...) fs. ... .fstat(newPath, ...) fs. ... .fstatSync(newPath, ...) fs. ... .fsync(newPath, ...) fs. ... .fsyncSync(newPath, ...) fs. ... .ftruncate(newPath, ...) fs. ... .ftruncateSync(newPath, ...) fs. ... .futimes(newPath, ...) fs. ... .futimesSync(newPath, ...) fs. ... .lchmod(newPath, ...) fs. ... .lchmodSync(newPath, ...) fs. ... .lchown(newPath, ...) fs. ... .lchownSync(newPath, ...) fs. ... .link(newPath, ...) fs. ... .link(req.file.path, newPath, ...) fs. ... .linkSync(newPath, ...) fs. ... .linkSync(req.file.path, newPath, ...) fs. ... .lstat(newPath, ...) fs. ... .lstatSync(newPath, ...) fs. ... .lutimes(newPath, ...) fs. ... .lutimesSync(newPath, ...) fs. ... .mkdir(newPath, ...) fs. ... .mkdirSync(newPath, ...) fs. ... .mkdtemp(newPath, ...) fs. ... .mkdtempSync(newPath, ...) fs. ... .open(newPath, ...) fs. ... .openSync(newPath, ...) fs. ... .opendir(newPath, ...) fs. ... .opendirSync(newPath, ...) fs. ... .read(newPath, ...) fs. ... .read(newPath, ...) fs. ... .readFile(newPath, ...) fs. ... .readFileSync(newPath, ...) fs. ... .readSync(newPath, ...) fs. ... .readSync(newPath, ...) fs. ... .readdir(newPath, ...) fs. ... .readdirSync(newPath, ...) fs. ... .readlink(newPath, ...) fs. ... .readlinkSync(newPath, ...) fs. ... .readv(newPath, ...) fs. ... .readvSync(newPath, ...) fs. ... .realpath(newPath, ...) fs. ... .realpath.native(newPath, ...) fs. ... .realpathSync.native(newPath, ...) fs. ... .realpathync(newPath, ...) fs. ... .rename(newPath, ...) fs. ... .rename(req.file.path, newPath, ...) fs. ... .renameSync(newPath, ...) fs. ... .renameSync(req.file.path, newPath, ...) fs. ... .rm(newPath, ...) fs. ... .rmSync(newPath, ...) fs. ... .rmdir(newPath, ...) fs. ... .rmdirSync(newPath, ...) fs. ... .stat(newPath, ...) fs. ... .statSync(newPath, ...) fs. ... .symlink(newPath, ...) fs. ... .symlink(req.file.path, newPath, ...) fs. ... .symlinkSync(newPath, ...) fs. ... .symlinkSync(req.file.path, newPath, ...) fs. ... .truncate(newPath, ...) fs. ... .truncateSync(newPath, ...) fs. ... .unlink(newPath, ...) fs. ... .unlinkSync(newPath, ...) fs. ... .unwatchFile(newPath, ...) fs. ... .utimes(newPath, ...) fs. ... .utimesSync(newPath, ...) fs. ... .watch(newPath, ...) fs. ... .watchFile(newPath, ...) fs. ... .write(newPath, ...) fs. ... .writeFile(newPath, ...) fs. ... .writeFileSync(newPath, ...) fs. ... .writeSync(newPath, ...) fs. ... .writev(newPath, ...) fs. ... .writevSync(newPath, ...) newPath $METHOD("...", ...) access(newPath,...) accessSync(newPath, ...) appendFile(newPath,...) appendFileSync(newPath, ...) chmod(newPath,...) chmodSync(newPath, ...) chown(newPath,...) chownSync(newPath, ...) close(newPath,...) closeSync(newPath, ...) copyFile(newPath,...) copyFile(req.file.path, newPath,...) copyFileSync(newPath, ...) copyFileSync(req.file.path, newPath, ...) cp(newPath, ...) cp(req.file.path, newPath, ...) cpSync(newPath, ...) cpSync(req.file.path, newPath, ...) createReadStream(newPath,...) createWriteStream(newPath,...) exists(newPath, ...) existsSync(newPath, ...) fchmod(newPath, ...) fchmodSync(newPath, ...) fchown(newPath, ...) fchownSync(newPath, ...) fdatasync(newPath, ...) fdatasyncSync(newPath, ...) fstat(newPath, ...) fstatSync(newPath, ...) fsync(newPath, ...) fsyncSync(newPath, ...) ftruncate(newPath, ...) ftruncateSync(newPath, ...) futimes(newPath, ...) futimesSync(newPath, ...) lchmod(newPath, ...) lchmodSync(newPath, ...) lchown(newPath, ...) lchownSync(newPath, ...) link(newPath, ...) link(req.file.path, newPath, ...) linkSync(newPath, ...) linkSync(req.file.path, newPath, ...) lstat(newPath, ...) lstatSync(newPath, ...) lutimes(newPath, ...) lutimesSync(newPath, ...) mkdir(newPath, ...) mkdirSync(newPath, ...) mkdtemp(newPath, ...) mkdtempSync(newPath, ...) open(newPath, ...) openSync(newPath, ...) opendir(newPath, ...) opendirSync(newPath, ...) read(newPath, ...) read(newPath, ...) readFile(newPath, ...) readFileSync(newPath, ...) readSync(newPath, ...) readSync(newPath, ...) readdir(newPath, ...) readdirSync(newPath, ...) readlink(newPath, ...) readlinkSync(newPath, ...) readv(newPath, ...) readvSync(newPath, ...) realpath(newPath, ...) realpath.native(newPath, ...) realpathSync.native(newPath, ...) realpathync(newPath, ...) rename(newPath, ...) rename(req.file.path, newPath, ...) renameSync(newPath, ...) renameSync(req.file.path, newPath, ...) rm(newPath, ...) rmSync(newPath, ...) rmdir(newPath, ...) rmdirSync(newPath, ...) stat(newPath, ...) statSync(newPath, ...) symlink(newPath, ...) symlink(req.file.path, newPath, ...) symlinkSync(newPath, ...) symlinkSync(req.file.path, newPath, ...) truncate(newPath, ...) truncateSync(newPath, ...) unlink(newPath, ...) unlinkSync(newPath, ...) unwatchFile(newPath, ...) utimes(newPath, ...) utimesSync(newPath, ...) watch(newPath, ...) watchFile(newPath, ...) write(newPath, ...) writeFile(newPath, ...) writeFileSync(newPath, ...) writeSync(newPath, ...) writev(newPath, ...) writevSync(newPath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 47544dea662a3fffd3a86aa3ab44fbb92fa65a4fae39c436d68087c004ecbac28047cb2c891791e6d82803ba59abb6132fd2218243ce81ff835f43f7d547c8ca_0
2025-05-31 07:03:19,643 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:03.772365 on 85 files
2025-05-31 07:03:19,644 - semgrep.core_runner - DEBUG - findings summary: 4 warning, 0 error, 0 info
2025-05-31 07:03:19,646 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-05-31 07:03:19,647 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-05-31 07:03:19,647 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIXgpdsK/semgrep/bin/semgrep-core-proprietary'.
2025-05-31 07:03:19,779 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • <none>

  Partially analyzed due to parsing or internal Opengrep errors

   • tailwind.config.ts (1 lines skipped)

2025-05-31 07:03:19,780 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Partially scanned: 1 files only partially analyzed due to parsing or internal Opengrep errors

Ran 435 rules on 85 files: 4 findings.
2025-05-31 07:03:19,781 - semgrep.app.version - DEBUG - Version cache does not exist
2025-05-31 07:03:19,797 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
